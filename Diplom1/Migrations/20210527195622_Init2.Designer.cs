// <auto-generated />
using Diplom1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Diplom1.Migrations
{
    [DbContext(typeof(AppDbContextData))]
    [Migration("20210527195622_Init2")]
    partial class Init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CargoObjectRequest", b =>
                {
                    b.Property<int>("CargoObjID")
                        .HasColumnType("int");

                    b.Property<int>("ReqsID")
                        .HasColumnType("int");

                    b.HasKey("CargoObjID", "ReqsID");

                    b.HasIndex("ReqsID");

                    b.ToTable("CargoObjectRequest");
                });

            modelBuilder.Entity("CargoObjectService", b =>
                {
                    b.Property<int>("CargoObjectsID")
                        .HasColumnType("int");

                    b.Property<int>("PossibleServicesID")
                        .HasColumnType("int");

                    b.HasKey("CargoObjectsID", "PossibleServicesID");

                    b.HasIndex("PossibleServicesID");

                    b.ToTable("CargoObjectService");
                });

            modelBuilder.Entity("Diplom1.Models.CargoObject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DBCargo");
                });

            modelBuilder.Entity("Diplom1.Models.Request", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoAmount")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSumRub")
                        .HasColumnType("int");

                    b.Property<int>("TotalSumUsd")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DBRequests");
                });

            modelBuilder.Entity("Diplom1.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MeasureType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RubPrice")
                        .HasColumnType("real");

                    b.Property<float>("UsdPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("DBServices");
                });

            modelBuilder.Entity("RequestService", b =>
                {
                    b.Property<int>("ReqsID")
                        .HasColumnType("int");

                    b.Property<int>("ServicesID")
                        .HasColumnType("int");

                    b.HasKey("ReqsID", "ServicesID");

                    b.HasIndex("ServicesID");

                    b.ToTable("RequestService");
                });

            modelBuilder.Entity("CargoObjectRequest", b =>
                {
                    b.HasOne("Diplom1.Models.CargoObject", null)
                        .WithMany()
                        .HasForeignKey("CargoObjID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom1.Models.Request", null)
                        .WithMany()
                        .HasForeignKey("ReqsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CargoObjectService", b =>
                {
                    b.HasOne("Diplom1.Models.CargoObject", null)
                        .WithMany()
                        .HasForeignKey("CargoObjectsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom1.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("PossibleServicesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RequestService", b =>
                {
                    b.HasOne("Diplom1.Models.Request", null)
                        .WithMany()
                        .HasForeignKey("ReqsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom1.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
